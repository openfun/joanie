# Generated by Django 4.2.18 on 2025-02-03 14:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


def migrate_existing_credit_card_owner_to_owners_field(apps, schema_editor):
    """
    Forward migration: Transfer the `owner` field data to the new `owners` ManyToManyField.
    """
    CreditCard = apps.get_model("payment", "CreditCard")
    CreditCardOwnership = apps.get_model("payment", "CreditCardOwnership")

    for card in CreditCard.objects.all():
        if card.owner:
            CreditCardOwnership.objects.create(
                owner=card.owner,
                credit_card=card,
                is_main=card.is_main
            )


def rollback_credit_card_owners_to_primary_owner(apps, schema_editor):
    """
    Backward migration: Restore the `owner` and `is_main` fields using the first entry in `owners`.
    """
    CreditCard = apps.get_model("payment", "CreditCard")
    CreditCardOwnership = apps.get_model("payment", "CreditCardOwnership")

    for card in CreditCard.objects.all():
        first_ownership = CreditCardOwnership.objects.filter(
            credit_card=card
        ).order_by("created_on").first()

        if first_ownership:
            # Restore the `owner` and `is_main` fields from the first ownership record
            # Note : some users that had access to this card might find thelmselves without
            # a credit card registered for them.
            card.owner = first_ownership.owner
            card.is_main = first_ownership.is_main
            card.save()
            first_ownership.delete()

        # Clean up all ownership records for this card
        CreditCardOwnership.objects.filter(credit_card=card).delete()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('payment', '0009_creditcard_payment_provider'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditCardOwnership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('is_main', models.BooleanField(default=False, verbose_name='main')),
            ],
            options={
                'verbose_name': 'credit_card_ownership',
                'verbose_name_plural': 'credit card ownernships',
                'db_table': 'joanie_credit_card_ownership',
                'ordering': ['-created_on'],
            },
        ),
        migrations.RemoveConstraint(
            model_name='creditcard',
            name='unique_main_credit_card_per_user',
        ),
        migrations.AlterField(
            model_name='creditcard',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='credit_cards', to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='creditcardownership',
            name='credit_card',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownerships', to='payment.creditcard'),
        ),
        migrations.AddField(
            model_name='creditcardownership',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_card_ownerships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='creditcard',
            name='owners',
            field=models.ManyToManyField(related_name='payment_cards', through='payment.CreditCardOwnership', to=settings.AUTH_USER_MODEL, verbose_name='owners'),
        ),
        migrations.AddConstraint(
            model_name='creditcardownership',
            constraint=models.UniqueConstraint(condition=models.Q(('is_main', True)), fields=('owner', 'is_main'), name='unique_main_credit_card_per_user'),
        ),
        migrations.AddConstraint(
            model_name='creditcardownership',
            constraint=models.UniqueConstraint(fields=('credit_card', 'owner'), name='unique_credit_card_ownership'),
        ),
        migrations.RunPython(
            migrate_existing_credit_card_owner_to_owners_field,
            rollback_credit_card_owners_to_primary_owner,
        ),
    ]
