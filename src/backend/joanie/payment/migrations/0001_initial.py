# Generated by Django 4.0.8 on 2022-10-25 07:17

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import djmoney.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProformaInvoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="primary key for the record as UUID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="date and time at which a record was created",
                        verbose_name="created on",
                    ),
                ),
                (
                    "updated_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="date and time at which a record was last updated",
                        verbose_name="updated on",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        db_index=True, editable=False, max_length=40, unique=True
                    ),
                ),
                (
                    "total_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "total",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2, max_digits=9, verbose_name="total"
                    ),
                ),
                (
                    "recipient_name",
                    models.CharField(
                        max_length=40, verbose_name="proforma invoice recipient"
                    ),
                ),
                (
                    "recipient_address",
                    models.TextField(
                        max_length=255, verbose_name="proforma invoice address"
                    ),
                ),
                (
                    "localized_context",
                    models.JSONField(
                        editable=False,
                        help_text="Localized data that needs to be frozen on pro forma invoice creation",
                        verbose_name="context",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="proforma_invoices",
                        to="core.order",
                        verbose_name="order",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="children",
                        to="payment.proformainvoice",
                        verbose_name="parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pro forma invoice",
                "verbose_name_plural": "Pro forma invoices",
                "db_table": "joanie_proforma_invoice",
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="primary key for the record as UUID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="date and time at which a record was created",
                        verbose_name="created on",
                    ),
                ),
                (
                    "updated_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="date and time at which a record was last updated",
                        verbose_name="updated on",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="Reference to identify transaction from external platform",
                        max_length=40,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "total_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "total",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2, max_digits=9, verbose_name="total"
                    ),
                ),
                (
                    "proforma_invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transactions",
                        to="payment.proformainvoice",
                        verbose_name="proforma invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "db_table": "joanie_transaction",
            },
        ),
        migrations.CreateModel(
            name="CreditCard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="primary key for the record as UUID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="date and time at which a record was created",
                        verbose_name="created on",
                    ),
                ),
                (
                    "updated_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="date and time at which a record was last updated",
                        verbose_name="updated on",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        db_index=True, editable=False, max_length=50, unique=True
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="title"
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        blank=True, max_length=40, null=True, verbose_name="brand"
                    ),
                ),
                (
                    "expiration_month",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                        verbose_name="expiration month",
                    ),
                ),
                (
                    "expiration_year",
                    models.PositiveSmallIntegerField(verbose_name="expiration year"),
                ),
                (
                    "last_numbers",
                    models.CharField(max_length=4, verbose_name="last 4 numbers"),
                ),
                ("is_main", models.BooleanField(default=False, verbose_name="main")),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credit_cards",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "credit card",
                "verbose_name_plural": "credit cards",
                "db_table": "joanie_credit_card",
            },
        ),
        migrations.AddConstraint(
            model_name="proformainvoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("parent__isnull", True), ("total__gte", 0)),
                    ("parent__isnull", False),
                    _connector="OR",
                ),
                name="main_proforma_invoice_should_have_a_positive_amount",
            ),
        ),
        migrations.AddConstraint(
            model_name="proformainvoice",
            constraint=models.UniqueConstraint(
                condition=models.Q(("parent__isnull", True)),
                fields=("order",),
                name="only_one_proforma_invoice_without_parent_per_order",
            ),
        ),
        migrations.AddConstraint(
            model_name="creditcard",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_main", True)),
                fields=("owner",),
                name="unique_main_credit_card_per_user",
            ),
        ),
    ]
