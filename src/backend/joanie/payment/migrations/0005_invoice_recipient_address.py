# Generated by Django 4.2.7 on 2023-11-23 15:44
from typing import Tuple

import django.db.models.deletion
from django.db import migrations, models


def populate_recipient_address(apps, schema_editor):
    """
    A new field "recipient_address" which is a ForeignKey to the Address model was added
    to the Invoice model in the previous migration. It was added as a nullable field but
    we now want to populate it through deprecated fields recipient_name and
    recipient_address. After that, we will be able to remove those deprecated fields
    and make the new field required.
    """
    Invoice = apps.get_model("payment", "Invoice")
    Address = apps.get_model("core", "Address")

    def split_deprecated_address(address: str) -> Tuple[str, str, str, str]:
        """Split the deprecated address field into its components."""
        (address, rest) = address.splitlines()
        (rest, country) = rest.split(", ", maxsplit=1)
        (postcode, city) = rest.split(maxsplit=1)
        return (address, postcode, city, country)

    for invoice in Invoice.objects.iterator():
        (first_name, last_name) = invoice.deprecated_recipient_name.split(maxsplit=1)
        (address, postcode, city, country) = split_deprecated_address(
            invoice.deprecated_recipient_address
        )
        address, _ = Address.objects.get_or_create(
            first_name=first_name,
            last_name=last_name,
            address=address,
            postcode=postcode,
            city=city,
            country=country,
            owner=invoice.order.owner,
            defaults={
                "title": f"Migrated address from invoice {invoice.reference}",
                "is_reusable": False,
            },
        )
        invoice.recipient_address = address
        invoice.save()


def rollback_populate_recipient_address(apps, schema_editor):
    """
    Rollback the previous migration. We are able to populate deprecated fields
    recipient_name and recipient_address from the new field recipient_address.
    """
    Invoice = apps.get_model("payment", "Invoice")
    for invoice in Invoice.objects.select_related("recipient_address").iterator():
        invoice.deprecated_recipient_name = invoice.recipient_address.full_name
        invoice.deprecated_recipient_address = invoice.recipient_address.full_address
        invoice.save()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0018_address_is_reusable_and_more"),
        (
            "payment",
            "0004_rename_recipient_address_invoice_deprecated_recipient_address_and_more",
        ),
    ]

    operations = [
        migrations.AddField(
            model_name="invoice",
            name="recipient_address",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="invoices",
                to="core.address",
                verbose_name="invoice address",
            ),
        ),
        migrations.RunPython(
            populate_recipient_address, rollback_populate_recipient_address
        ),
    ]
