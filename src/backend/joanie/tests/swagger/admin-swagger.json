{
    "openapi": "3.0.3",
    "info": {
        "title": "Joanie API",
        "version": "1.0.0 (v1.0)",
        "description": "This is the Joanie API schema."
    },
    "paths": {
        "/api/v1.0/admin/certificate-definitions/": {
            "get": {
                "operationId": "certificate_definitions_list",
                "description": "Admin Certificate ViewSet",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "template",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "title": "Template to generate pdf",
                            "enum": [
                                "certificate",
                                "degree"
                            ]
                        },
                        "description": "* `certificate` - Certificate\n* `degree` - Degree"
                    }
                ],
                "tags": [
                    "certificate-definitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminCertificateDefinitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "certificate_definitions_create",
                "description": "Admin Certificate ViewSet",
                "tags": [
                    "certificate-definitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCertificateDefinitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCertificateDefinitionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCertificateDefinition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/certificate-definitions/{id}/": {
            "get": {
                "operationId": "certificate_definitions_retrieve",
                "description": "Admin Certificate ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "certificate-definitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCertificateDefinition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "certificate_definitions_update",
                "description": "Admin Certificate ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "certificate-definitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCertificateDefinitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCertificateDefinitionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCertificateDefinition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "certificate_definitions_partial_update",
                "description": "Admin Certificate ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "certificate-definitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCertificateDefinitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCertificateDefinitionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCertificateDefinition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "certificate_definitions_destroy",
                "description": "Admin Certificate ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "certificate-definitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/contract-definitions/": {
            "get": {
                "operationId": "contract_definitions_list",
                "description": "Admin Contract Definition ViewSet",
                "parameters": [
                    {
                        "in": "query",
                        "name": "language",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en-us",
                                "fr-fr"
                            ]
                        },
                        "description": "Language of the contract definition\n\n* `en-us` - English\n* `fr-fr` - French"
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "contract-definitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminContractDefinitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contract_definitions_create",
                "description": "Admin Contract Definition ViewSet",
                "tags": [
                    "contract-definitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminContractDefinitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminContractDefinitionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminContractDefinition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/contract-definitions/{id}/": {
            "get": {
                "operationId": "contract_definitions_retrieve",
                "description": "Admin Contract Definition ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "contract-definitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminContractDefinition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contract_definitions_update",
                "description": "Admin Contract Definition ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "contract-definitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminContractDefinitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminContractDefinitionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminContractDefinition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contract_definitions_partial_update",
                "description": "Admin Contract Definition ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "contract-definitions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminContractDefinitionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminContractDefinitionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminContractDefinition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contract_definitions_destroy",
                "description": "Admin Contract Definition ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "contract-definitions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/course-product-relations/": {
            "get": {
                "operationId": "course_product_relations_list",
                "description": "CourseProductRelation ViewSet",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminCourseProductRelationsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "course_product_relations_create",
                "description": "CourseProductRelation ViewSet",
                "parameters": [
                    {
                        "in": "query",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseProductRelations"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/course-product-relations/{course_product_relation_id}/order-groups/": {
            "get": {
                "operationId": "course_product_relations_order_groups_list",
                "description": "OrderGroup ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_product_relation_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminOrderGroupList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "course_product_relations_order_groups_create",
                "description": "Create a new OrderGroup using the course_product_relation_id from the URL",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_product_relation_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrderGroupCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrderGroupCreateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrderGroupCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/course-product-relations/{course_product_relation_id}/order-groups/{id}/": {
            "get": {
                "operationId": "course_product_relations_order_groups_retrieve",
                "description": "OrderGroup ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_product_relation_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrderGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "course_product_relations_order_groups_update",
                "description": "OrderGroup ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_product_relation_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrderGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrderGroupRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrderGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "course_product_relations_order_groups_partial_update",
                "description": "OrderGroup ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_product_relation_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminOrderGroupRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminOrderGroupRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrderGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "course_product_relations_order_groups_destroy",
                "description": "OrderGroup ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_product_relation_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/course-product-relations/{id}/": {
            "get": {
                "operationId": "course_product_relations_retrieve",
                "description": "CourseProductRelation ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseProductRelations"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "course_product_relations_update",
                "description": "CourseProductRelation ViewSet",
                "parameters": [
                    {
                        "in": "query",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseProductRelations"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "course_product_relations_partial_update",
                "description": "CourseProductRelation ViewSet",
                "parameters": [
                    {
                        "in": "query",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "product_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseProductRelations"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "course_product_relations_destroy",
                "description": "Delete the relation between course_id and product_id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-product-relations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/course-runs/": {
            "get": {
                "operationId": "course_runs_list",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "query",
                        "name": "course_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "is_gradable",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_listed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "tags": [
                    "course-runs"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminCourseRunList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "course_runs_create",
                "description": "Admin CourseRun ViewSet",
                "tags": [
                    "course-runs"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRunRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRunRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseRun"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/course-runs/{id}/": {
            "get": {
                "operationId": "course_runs_retrieve",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-runs"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseRun"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "course_runs_update",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-runs"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRunRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRunRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseRun"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "course_runs_partial_update",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-runs"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCourseRunRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCourseRunRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseRun"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "course_runs_destroy",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "course-runs"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/courses/": {
            "get": {
                "operationId": "courses_list",
                "description": "Admin Course ViewSet",
                "parameters": [
                    {
                        "in": "query",
                        "name": "organization_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "courses"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminCourseLightList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "courses_create",
                "description": "Admin Course ViewSet",
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/courses/{course_id}/accesses/": {
            "post": {
                "operationId": "courses_accesses_create",
                "description": "Write only Course Access ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseAccessRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseAccessRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseAccess"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/courses/{course_id}/accesses/{id}/": {
            "put": {
                "operationId": "courses_accesses_update",
                "description": "Write only Course Access ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseAccessRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseAccessRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseAccess"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "courses_accesses_partial_update",
                "description": "Write only Course Access ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCourseAccessRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCourseAccessRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseAccess"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "courses_accesses_destroy",
                "description": "Write only Course Access ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/courses/{course_id}/course-runs/": {
            "get": {
                "operationId": "courses_course_runs_list",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "course_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "is_gradable",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_listed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "tags": [
                    "courses"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminCourseRunList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "courses_course_runs_create",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRunRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRunRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseRun"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/courses/{course_id}/course-runs/{id}/": {
            "get": {
                "operationId": "courses_course_runs_retrieve",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseRun"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "courses_course_runs_update",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRunRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRunRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseRun"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "courses_course_runs_partial_update",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCourseRunRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCourseRunRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourseRun"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "courses_course_runs_destroy",
                "description": "Admin CourseRun ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "course_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/courses/{id}/": {
            "get": {
                "operationId": "courses_retrieve",
                "description": "Admin Course ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "courses_update",
                "description": "Admin Course ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminCourseRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "courses_partial_update",
                "description": "Admin Course ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCourseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminCourseRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCourse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "courses_destroy",
                "description": "Admin Course ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "courses"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/orders/": {
            "get": {
                "operationId": "orders_list",
                "description": "Admin Order ViewSet",
                "parameters": [
                    {
                        "in": "query",
                        "name": "course_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "organization_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "owner_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "product_ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "primary key for the record as UUID",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "canceled",
                                "draft",
                                "pending",
                                "submitted",
                                "validated"
                            ]
                        },
                        "description": "* `draft` - Draft\n* `submitted` - Submitted\n* `pending` - Pending\n* `canceled` - Canceled\n* `validated` - Validated"
                    }
                ],
                "tags": [
                    "orders"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminOrderLightList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/orders/{id}/": {
            "get": {
                "operationId": "orders_retrieve",
                "description": "Admin Order ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "orders"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrder"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/organizations/": {
            "get": {
                "operationId": "organizations_list",
                "description": "Admin Organization ViewSet",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminOrganizationLightList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "organizations_create",
                "description": "Admin Organization ViewSet",
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/organizations/{organization_id}/accesses/": {
            "post": {
                "operationId": "organizations_accesses_create",
                "description": "Write only Organization Access ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationAccessRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationAccessRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganizationAccess"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/organizations/{organization_id}/accesses/{id}/": {
            "put": {
                "operationId": "organizations_accesses_update",
                "description": "Write only Organization Access ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationAccessRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationAccessRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganizationAccess"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "organizations_accesses_partial_update",
                "description": "Write only Organization Access ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminOrganizationAccessRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminOrganizationAccessRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganizationAccess"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "organizations_accesses_destroy",
                "description": "Write only Organization Access ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/organizations/{organization_id}/addresses/": {
            "post": {
                "operationId": "organizations_addresses_create",
                "description": "Write only Address for Organizations ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "organization_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationAddressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationAddressRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganizationAddress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/organizations/{organization_id}/addresses/{id}/": {
            "put": {
                "operationId": "organizations_addresses_update",
                "description": "Write only Address for Organizations ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationAddressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationAddressRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganizationAddress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "organizations_addresses_partial_update",
                "description": "Write only Address for Organizations ViewSet.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminOrganizationAddressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminOrganizationAddressRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganizationAddress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "organizations_addresses_destroy",
                "description": "Delete the address of an organization when the relation exists only.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "organization_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/organizations/{id}/": {
            "get": {
                "operationId": "organizations_retrieve",
                "description": "Admin Organization ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "organizations_update",
                "description": "Admin Organization ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminOrganizationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "organizations_partial_update",
                "description": "Admin Organization ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminOrganizationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminOrganizationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminOrganization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "organizations_destroy",
                "description": "Admin Organization ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "organizations"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/products/": {
            "get": {
                "operationId": "products_list",
                "description": "Admin Product ViewSet",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "certificate",
                                "credential",
                                "enrollment"
                            ]
                        },
                        "description": "* `credential` - Credential\n* `enrollment` - Enrollment\n* `certificate` - Certificate"
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminProductLightList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "products_create",
                "description": "Admin Product ViewSet",
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminProduct"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/products/{id}/": {
            "get": {
                "operationId": "products_retrieve",
                "description": "Admin Product ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminProduct"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "products_update",
                "description": "Admin Product ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminProduct"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "products_partial_update",
                "description": "Admin Product ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminProductRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminProductRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminProduct"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "products_destroy",
                "description": "Admin Product ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/products/{product_id}/target-courses/": {
            "post": {
                "operationId": "products_target_courses_create",
                "description": "Parse and create the ProductTargetCourseRelation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductTargetCourseRelationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductTargetCourseRelationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminProductTargetCourseRelation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/products/{product_id}/target-courses/{id}/": {
            "put": {
                "operationId": "products_target_courses_update",
                "description": "Write only Product's TargetCourse ViewSet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "product_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductTargetCourseRelationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductTargetCourseRelationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminProductTargetCourseRelation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "products_target_courses_partial_update",
                "description": "Parse and patch the ProductTargetCourseRelation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "product_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminProductTargetCourseRelationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAdminProductTargetCourseRelationRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminProductTargetCourseRelation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "products_target_courses_destroy",
                "description": "Delete the relation between product_id and course_id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "product_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1.0/admin/products/{product_id}/target-courses/reorder/": {
            "post": {
                "operationId": "products_target_courses_reorder_create",
                "description": "Allow to reorder target_courses for a product",
                "parameters": [
                    {
                        "in": "path",
                        "name": "product_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "products"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductTargetCourseRelationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminProductTargetCourseRelationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminProductTargetCourseRelation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/users/": {
            "get": {
                "operationId": "users_list",
                "description": "Admin User ViewSet",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAdminUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1.0/admin/users/me/": {
            "get": {
                "operationId": "users_me_retrieve",
                "description": "Return information on currently logged user",
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AdminCertificate": {
                "type": "object",
                "description": "Read only serializer for Certificate model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "definition_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "issued_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date of issuance"
                    }
                },
                "required": [
                    "definition_title",
                    "id",
                    "issued_on"
                ]
            },
            "AdminCertificateDefinition": {
                "type": "object",
                "description": "Serializer for CertificationDefinition model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "template": {
                        "nullable": true,
                        "title": "Template to generate pdf",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/TemplateEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "title"
                ]
            },
            "AdminCertificateDefinitionRequest": {
                "type": "object",
                "description": "Serializer for CertificationDefinition model.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1
                    },
                    "template": {
                        "nullable": true,
                        "title": "Template to generate pdf",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/TemplateEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "title"
                ]
            },
            "AdminContract": {
                "type": "object",
                "description": "Read only serializer for Contract model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "definition_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "student_signed_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Date and time of issuance"
                    },
                    "organization_signed_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Date and time the organization signed the contract"
                    },
                    "submitted_for_signature_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Date and time we send the contract to signature provider"
                    }
                },
                "required": [
                    "definition_title",
                    "id",
                    "organization_signed_on",
                    "student_signed_on",
                    "submitted_for_signature_on"
                ]
            },
            "AdminContractDefinition": {
                "type": "object",
                "description": "Serializer for ContractDefinition model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "body": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Language of the contract definition\n\n* `en-us` - English\n* `fr-fr` - French"
                    },
                    "title": {
                        "type": "string"
                    },
                    "name": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NameEnum"
                            }
                        ],
                        "title": "Template name"
                    }
                },
                "required": [
                    "id",
                    "language",
                    "title"
                ]
            },
            "AdminContractDefinitionRequest": {
                "type": "object",
                "description": "Serializer for ContractDefinition model.",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Language of the contract definition\n\n* `en-us` - English\n* `fr-fr` - French"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NameEnum"
                            }
                        ],
                        "title": "Template name"
                    }
                },
                "required": [
                    "language",
                    "title"
                ]
            },
            "AdminCourse": {
                "type": "object",
                "description": "Serializer for Course model.",
                "properties": {
                    "accesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminCourseAccess"
                        },
                        "readOnly": true
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "cover": {
                        "type": "string",
                        "format": "uri"
                    },
                    "course_runs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminCourseRunLight"
                        },
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrganizationLight"
                        },
                        "readOnly": true
                    },
                    "product_relations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminProductRelation"
                        },
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the course carrying information on what to display on a course glimpse.\n\nThe game is to find the highest priority state for this course among\nits course runs and its products.",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "accesses",
                    "code",
                    "course_runs",
                    "id",
                    "organizations",
                    "product_relations",
                    "state",
                    "title"
                ]
            },
            "AdminCourseAccess": {
                "type": "object",
                "description": "Serializer for CourseAccess model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/CourseAccessRoleChoiceEnum"
                    }
                },
                "required": [
                    "id",
                    "user"
                ]
            },
            "AdminCourseAccessRequest": {
                "type": "object",
                "description": "Serializer for CourseAccess model.",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/CourseAccessRoleChoiceEnum"
                    }
                }
            },
            "AdminCourseLight": {
                "type": "object",
                "description": "Read-only light serializer for Course model.",
                "properties": {
                    "code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the course carrying information on what to display on a course glimpse.\n\nThe game is to find the highest priority state for this course among\nits course runs and its products.",
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "id",
                    "state",
                    "title"
                ]
            },
            "AdminCourseNested": {
                "type": "object",
                "description": "Serializer for Course model nested in product.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "cover": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string"
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrganizationLight"
                        },
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the course carrying information on what to display on a course glimpse.\n\nThe game is to find the highest priority state for this course among\nits course runs and its products.",
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "id",
                    "organizations",
                    "state",
                    "title"
                ]
            },
            "AdminCourseNestedRequest": {
                "type": "object",
                "description": "Serializer for Course model nested in product.",
                "properties": {
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "cover": {
                        "type": "string",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "code",
                    "title"
                ]
            },
            "AdminCourseProductRelations": {
                "type": "object",
                "description": "Serialize all information about a course relation nested in a product.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "can_edit": {
                        "type": "string",
                        "readOnly": true
                    },
                    "course": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminCourseNested"
                            }
                        ],
                        "readOnly": true
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrganizationLight"
                        },
                        "readOnly": true
                    },
                    "order_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrderGroup"
                        },
                        "readOnly": true
                    },
                    "product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminProduct"
                            }
                        ],
                        "readOnly": true
                    },
                    "uri": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "can_edit",
                    "course",
                    "id",
                    "order_groups",
                    "organizations",
                    "product",
                    "uri"
                ]
            },
            "AdminCourseRequest": {
                "type": "object",
                "description": "Serializer for Course model.",
                "properties": {
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "cover": {
                        "type": "string",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "code",
                    "title"
                ]
            },
            "AdminCourseRun": {
                "type": "object",
                "description": "Serializer for CourseRun model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "course": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminCourseLight"
                            }
                        ],
                        "readOnly": true
                    },
                    "resource_link": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "title": {
                        "type": "string"
                    },
                    "is_gradable": {
                        "type": "boolean"
                    },
                    "is_listed": {
                        "type": "boolean",
                        "description": "If checked the course run will be included in the list of course runs available for enrollment on the related course page."
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LanguagesEnum"
                        }
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course start"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course end"
                    },
                    "enrollment_start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Enrollment date"
                    },
                    "enrollment_end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "uri": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "course",
                    "id",
                    "languages",
                    "resource_link",
                    "title",
                    "uri"
                ]
            },
            "AdminCourseRunLight": {
                "type": "object",
                "description": "Serializer for CourseRun model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "resource_link": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "title": {
                        "type": "string"
                    },
                    "is_gradable": {
                        "type": "boolean"
                    },
                    "is_listed": {
                        "type": "boolean",
                        "description": "If checked the course run will be included in the list of course runs available for enrollment on the related course page."
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LanguagesEnum"
                        }
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course start"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course end"
                    },
                    "enrollment_start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Enrollment date"
                    },
                    "enrollment_end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "uri": {
                        "type": "string",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Return the state of the course run at the current time.",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "languages",
                    "resource_link",
                    "state",
                    "title",
                    "uri"
                ]
            },
            "AdminCourseRunLightRequest": {
                "type": "object",
                "description": "Serializer for CourseRun model.",
                "properties": {
                    "resource_link": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "is_gradable": {
                        "type": "boolean"
                    },
                    "is_listed": {
                        "type": "boolean",
                        "description": "If checked the course run will be included in the list of course runs available for enrollment on the related course page."
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LanguagesEnum"
                        }
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course start"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course end"
                    },
                    "enrollment_start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Enrollment date"
                    },
                    "enrollment_end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "required": [
                    "languages",
                    "resource_link",
                    "title"
                ]
            },
            "AdminCourseRunRequest": {
                "type": "object",
                "description": "Serializer for CourseRun model.",
                "properties": {
                    "resource_link": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "is_gradable": {
                        "type": "boolean"
                    },
                    "is_listed": {
                        "type": "boolean",
                        "description": "If checked the course run will be included in the list of course runs available for enrollment on the related course page."
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LanguagesEnum"
                        }
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course start"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course end"
                    },
                    "enrollment_start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Enrollment date"
                    },
                    "enrollment_end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "required": [
                    "languages",
                    "resource_link",
                    "title"
                ]
            },
            "AdminInvoice": {
                "type": "object",
                "description": "Read only serializer for Invoice model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "balance": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "date and time at which a record was created"
                    },
                    "invoiced_balance": {
                        "type": "string",
                        "readOnly": true
                    },
                    "recipient_address": {
                        "type": "string",
                        "readOnly": true
                    },
                    "reference": {
                        "type": "string",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Process the state of the invoice",
                        "readOnly": true
                    },
                    "transactions_balance": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "maximum": 10000000,
                        "minimum": -10000000,
                        "exclusiveMaximum": true,
                        "exclusiveMinimum": true
                    },
                    "total_currency": {
                        "type": "string",
                        "description": "Return the code of currency used by the instance",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "updated_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "date and time at which a record was last updated"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminInvoice"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "balance",
                    "children",
                    "created_on",
                    "id",
                    "invoiced_balance",
                    "recipient_address",
                    "reference",
                    "state",
                    "total",
                    "total_currency",
                    "transactions_balance",
                    "type",
                    "updated_on"
                ]
            },
            "AdminOrder": {
                "type": "object",
                "description": "Read only Serializer for Order model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "date and time at which a record was created"
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderStateEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "owner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminProductLight"
                            }
                        ],
                        "readOnly": true
                    },
                    "course": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminCourseLight"
                            }
                        ],
                        "readOnly": true
                    },
                    "enrollment": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminOrderEnrollment"
                            }
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminOrganizationLight"
                            }
                        ],
                        "readOnly": true
                    },
                    "order_group": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminOrderGroup"
                            }
                        ],
                        "readOnly": true
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "maximum": 10000000,
                        "minimum": 0,
                        "exclusiveMaximum": true
                    },
                    "total_currency": {
                        "type": "string",
                        "description": "Return the code of currency used by the instance",
                        "readOnly": true
                    },
                    "contract": {
                        "$ref": "#/components/schemas/AdminContract"
                    },
                    "certificate": {
                        "$ref": "#/components/schemas/AdminCertificate"
                    },
                    "main_invoice": {
                        "$ref": "#/components/schemas/AdminInvoice"
                    }
                },
                "required": [
                    "certificate",
                    "contract",
                    "course",
                    "created_on",
                    "enrollment",
                    "id",
                    "main_invoice",
                    "order_group",
                    "organization",
                    "owner",
                    "product",
                    "state",
                    "total",
                    "total_currency"
                ]
            },
            "AdminOrderEnrollment": {
                "type": "object",
                "description": "Serializer for Enrollment Order model",
                "properties": {
                    "course_run": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminCourseRunLight"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "date and time at which a record was created"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Ticked if the user is enrolled to the course run."
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EnrollmentStateEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "updated_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "date and time at which a record was last updated"
                    },
                    "was_created_by_order": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Ticked if the enrollment has been initially created in the scope of an order."
                    }
                },
                "required": [
                    "course_run",
                    "created_on",
                    "id",
                    "is_active",
                    "state",
                    "updated_on",
                    "was_created_by_order"
                ]
            },
            "AdminOrderGroup": {
                "type": "object",
                "description": "Admin Serializer for OrderGroup model",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "nb_seats": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "title": "Number of seats",
                        "description": "The maximum number of orders that can be validated for a given order group"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "nb_available_seats": {
                        "type": "integer",
                        "description": "Return the number of available seats for this order group.",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "date and time at which a record was created"
                    },
                    "can_edit": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "can_edit",
                    "created_on",
                    "id",
                    "nb_available_seats"
                ]
            },
            "AdminOrderGroupCreate": {
                "type": "object",
                "description": "Admin Serializer for OrderGroup model reserved to create action.\n\nUnlike `AdminOrderGroupSerializer`, it allows to pass a product to create\nthe order group.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "nb_seats": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "title": "Number of seats",
                        "description": "The maximum number of orders that can be validated for a given order group"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "nb_available_seats": {
                        "type": "integer",
                        "description": "Return the number of available seats for this order group.",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "date and time at which a record was created"
                    },
                    "can_edit": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "can_edit",
                    "created_on",
                    "id",
                    "nb_available_seats"
                ]
            },
            "AdminOrderGroupCreateRequest": {
                "type": "object",
                "description": "Admin Serializer for OrderGroup model reserved to create action.\n\nUnlike `AdminOrderGroupSerializer`, it allows to pass a product to create\nthe order group.",
                "properties": {
                    "nb_seats": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "title": "Number of seats",
                        "description": "The maximum number of orders that can be validated for a given order group"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                }
            },
            "AdminOrderGroupRequest": {
                "type": "object",
                "description": "Admin Serializer for OrderGroup model",
                "properties": {
                    "nb_seats": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "title": "Number of seats",
                        "description": "The maximum number of orders that can be validated for a given order group"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                }
            },
            "AdminOrderLight": {
                "type": "object",
                "description": "Read only light serializer for Order model.",
                "properties": {
                    "course_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "date and time at which a record was created"
                    },
                    "enrollment_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "organization_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner_name": {
                        "type": "string",
                        "description": "Return the full name of the order's owner if available,\notherwise fallback to the username",
                        "readOnly": true
                    },
                    "product_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderStateEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "maximum": 10000000,
                        "minimum": 0,
                        "exclusiveMaximum": true
                    },
                    "total_currency": {
                        "type": "string",
                        "description": "Return the code of currency used by the instance",
                        "readOnly": true
                    }
                },
                "required": [
                    "course_code",
                    "created_on",
                    "enrollment_id",
                    "id",
                    "organization_title",
                    "owner_name",
                    "product_title",
                    "state",
                    "total",
                    "total_currency"
                ]
            },
            "AdminOrganization": {
                "type": "object",
                "description": "Serializer for Organization model.",
                "properties": {
                    "accesses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrganizationAccess"
                        },
                        "readOnly": true
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "country": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryEnum"
                            }
                        ],
                        "description": "Country field will be deprecated soon in order to be replaced by address relation.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Türkiye\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "logo": {
                        "type": "string",
                        "format": "uri"
                    },
                    "representative": {
                        "type": "string",
                        "description": "representative fullname (to sign certificate for example)",
                        "maxLength": 100
                    },
                    "signature": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string"
                    },
                    "enterprise_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 50
                    },
                    "activity_category_code": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "representative_profession": {
                        "type": "string",
                        "nullable": true,
                        "title": "Profession of the organization's representative",
                        "description": "representative profession",
                        "maxLength": 100
                    },
                    "signatory_representative": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field is optional. If it is set, you must set the field'signatory_representative_profession' as well",
                        "maxLength": 100
                    },
                    "signatory_representative_profession": {
                        "type": "string",
                        "nullable": true,
                        "title": "Profession of the signatory representative",
                        "description": "signatory representative profession",
                        "maxLength": 100
                    },
                    "contact_phone": {
                        "type": "string",
                        "title": "Contact phone number",
                        "maxLength": 40
                    },
                    "contact_email": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "dpo_email": {
                        "type": "string",
                        "title": "Data protection officer email",
                        "maxLength": 100
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrganizationAddress"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "accesses",
                    "addresses",
                    "code",
                    "id",
                    "title"
                ]
            },
            "AdminOrganizationAccess": {
                "type": "object",
                "description": "Serializer for OrganizationAccess model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/OrganizationAccessRoleChoiceEnum"
                    }
                },
                "required": [
                    "id",
                    "user"
                ]
            },
            "AdminOrganizationAccessRequest": {
                "type": "object",
                "description": "Serializer for OrganizationAccess model.",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/OrganizationAccessRoleChoiceEnum"
                    }
                }
            },
            "AdminOrganizationAddress": {
                "type": "object",
                "description": "Serializer for the Address model for an organization",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "postcode": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEnum"
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "is_main": {
                        "type": "boolean",
                        "title": "Main"
                    },
                    "is_reusable": {
                        "type": "boolean",
                        "title": "Reusable"
                    }
                },
                "required": [
                    "address",
                    "city",
                    "country",
                    "first_name",
                    "id",
                    "last_name",
                    "postcode",
                    "title"
                ]
            },
            "AdminOrganizationAddressRequest": {
                "type": "object",
                "description": "Serializer for the Address model for an organization",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "address": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "postcode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEnum"
                    },
                    "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "is_main": {
                        "type": "boolean",
                        "title": "Main"
                    },
                    "is_reusable": {
                        "type": "boolean",
                        "title": "Reusable"
                    }
                },
                "required": [
                    "address",
                    "city",
                    "country",
                    "first_name",
                    "last_name",
                    "postcode",
                    "title"
                ]
            },
            "AdminOrganizationLight": {
                "type": "object",
                "description": "Read-only light Serializer for Organization model.",
                "properties": {
                    "code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    }
                },
                "required": [
                    "code",
                    "id",
                    "title"
                ]
            },
            "AdminOrganizationRequest": {
                "type": "object",
                "description": "Serializer for Organization model.",
                "properties": {
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "country": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryEnum"
                            }
                        ],
                        "description": "Country field will be deprecated soon in order to be replaced by address relation.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Türkiye\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe"
                    },
                    "logo": {
                        "type": "string",
                        "format": "binary"
                    },
                    "representative": {
                        "type": "string",
                        "description": "representative fullname (to sign certificate for example)",
                        "maxLength": 100
                    },
                    "signature": {
                        "type": "string",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "enterprise_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 50
                    },
                    "activity_category_code": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "representative_profession": {
                        "type": "string",
                        "nullable": true,
                        "title": "Profession of the organization's representative",
                        "description": "representative profession",
                        "maxLength": 100
                    },
                    "signatory_representative": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field is optional. If it is set, you must set the field'signatory_representative_profession' as well",
                        "maxLength": 100
                    },
                    "signatory_representative_profession": {
                        "type": "string",
                        "nullable": true,
                        "title": "Profession of the signatory representative",
                        "description": "signatory representative profession",
                        "maxLength": 100
                    },
                    "contact_phone": {
                        "type": "string",
                        "title": "Contact phone number",
                        "maxLength": 40
                    },
                    "contact_email": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "dpo_email": {
                        "type": "string",
                        "title": "Data protection officer email",
                        "maxLength": 100
                    }
                },
                "required": [
                    "code",
                    "title"
                ]
            },
            "AdminProduct": {
                "type": "object",
                "description": "Serializer for Product model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "call_to_action": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "maximum": 10000000,
                        "minimum": 0,
                        "exclusiveMaximum": true
                    },
                    "price_currency": {
                        "type": "string",
                        "description": "Return the code of currency used by the instance",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "instructions": {
                        "type": "string"
                    },
                    "certificate_definition": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "nullable": true
                    },
                    "contract_definition": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "nullable": true
                    },
                    "target_courses": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "call_to_action",
                    "id",
                    "price",
                    "price_currency",
                    "target_courses",
                    "title",
                    "type"
                ]
            },
            "AdminProductLight": {
                "type": "object",
                "description": "Concise Serializer for Product model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "call_to_action": {
                        "type": "string",
                        "readOnly": true
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "maximum": 10000000,
                        "minimum": 0,
                        "exclusiveMaximum": true,
                        "readOnly": true
                    },
                    "price_currency": {
                        "type": "string",
                        "description": "Return the code of currency used by the instance",
                        "readOnly": true
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "certificate_definition": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "readOnly": true,
                        "nullable": true
                    },
                    "contract_definition": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "readOnly": true,
                        "nullable": true
                    },
                    "target_courses": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "call_to_action",
                    "certificate_definition",
                    "contract_definition",
                    "description",
                    "id",
                    "price",
                    "price_currency",
                    "target_courses",
                    "title",
                    "type"
                ]
            },
            "AdminProductRelation": {
                "type": "object",
                "description": "Serializer for CourseProductRelation model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "can_edit": {
                        "type": "string",
                        "readOnly": true
                    },
                    "organizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrganizationLight"
                        },
                        "readOnly": true
                    },
                    "order_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrderGroup"
                        },
                        "readOnly": true
                    },
                    "product": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdminProduct"
                            }
                        ],
                        "readOnly": true
                    },
                    "uri": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "can_edit",
                    "id",
                    "order_groups",
                    "organizations",
                    "product",
                    "uri"
                ]
            },
            "AdminProductRequest": {
                "type": "object",
                "description": "Serializer for Product model.",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string"
                    },
                    "call_to_action": {
                        "type": "string",
                        "minLength": 1
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "maximum": 10000000,
                        "minimum": 0,
                        "exclusiveMaximum": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "instructions": {
                        "type": "string"
                    },
                    "certificate_definition": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "nullable": true
                    },
                    "contract_definition": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "nullable": true
                    }
                },
                "required": [
                    "call_to_action",
                    "price",
                    "title",
                    "type"
                ]
            },
            "AdminProductTargetCourseRelation": {
                "type": "object",
                "description": "Serializer for ProductTargetCourseRelation model",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "course": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID"
                    },
                    "product": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID"
                    },
                    "is_graded": {
                        "type": "boolean",
                        "title": "Take into account for certification",
                        "description": "Take into account the course grade for certification."
                    },
                    "position": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "title": "Position in product"
                    },
                    "course_runs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        }
                    }
                },
                "required": [
                    "course",
                    "id",
                    "product"
                ]
            },
            "AdminProductTargetCourseRelationRequest": {
                "type": "object",
                "description": "Serializer for ProductTargetCourseRelation model",
                "properties": {
                    "course": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID"
                    },
                    "product": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID"
                    },
                    "is_graded": {
                        "type": "boolean",
                        "title": "Take into account for certification",
                        "description": "Take into account the course grade for certification."
                    },
                    "position": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "title": "Position in product"
                    },
                    "course_runs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        }
                    }
                },
                "required": [
                    "course",
                    "product"
                ]
            },
            "AdminUser": {
                "type": "object",
                "description": "Read only serializer for User model.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "primary key for the record as UUID"
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "title": "Email address"
                    }
                },
                "required": [
                    "email",
                    "full_name",
                    "id",
                    "username"
                ]
            },
            "AdminUserRequest": {
                "type": "object",
                "description": "Read only serializer for User model.",
                "properties": {
                    "full_name": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "full_name"
                ]
            },
            "BlankEnum": {
                "enum": [
                    ""
                ]
            },
            "CountryEnum": {
                "enum": [
                    "AF",
                    "AX",
                    "AL",
                    "DZ",
                    "AS",
                    "AD",
                    "AO",
                    "AI",
                    "AQ",
                    "AG",
                    "AR",
                    "AM",
                    "AW",
                    "AU",
                    "AT",
                    "AZ",
                    "BS",
                    "BH",
                    "BD",
                    "BB",
                    "BY",
                    "BE",
                    "BZ",
                    "BJ",
                    "BM",
                    "BT",
                    "BO",
                    "BQ",
                    "BA",
                    "BW",
                    "BV",
                    "BR",
                    "IO",
                    "BN",
                    "BG",
                    "BF",
                    "BI",
                    "CV",
                    "KH",
                    "CM",
                    "CA",
                    "KY",
                    "CF",
                    "TD",
                    "CL",
                    "CN",
                    "CX",
                    "CC",
                    "CO",
                    "KM",
                    "CG",
                    "CD",
                    "CK",
                    "CR",
                    "CI",
                    "HR",
                    "CU",
                    "CW",
                    "CY",
                    "CZ",
                    "DK",
                    "DJ",
                    "DM",
                    "DO",
                    "EC",
                    "EG",
                    "SV",
                    "GQ",
                    "ER",
                    "EE",
                    "SZ",
                    "ET",
                    "FK",
                    "FO",
                    "FJ",
                    "FI",
                    "FR",
                    "GF",
                    "PF",
                    "TF",
                    "GA",
                    "GM",
                    "GE",
                    "DE",
                    "GH",
                    "GI",
                    "GR",
                    "GL",
                    "GD",
                    "GP",
                    "GU",
                    "GT",
                    "GG",
                    "GN",
                    "GW",
                    "GY",
                    "HT",
                    "HM",
                    "VA",
                    "HN",
                    "HK",
                    "HU",
                    "IS",
                    "IN",
                    "ID",
                    "IR",
                    "IQ",
                    "IE",
                    "IM",
                    "IL",
                    "IT",
                    "JM",
                    "JP",
                    "JE",
                    "JO",
                    "KZ",
                    "KE",
                    "KI",
                    "KW",
                    "KG",
                    "LA",
                    "LV",
                    "LB",
                    "LS",
                    "LR",
                    "LY",
                    "LI",
                    "LT",
                    "LU",
                    "MO",
                    "MG",
                    "MW",
                    "MY",
                    "MV",
                    "ML",
                    "MT",
                    "MH",
                    "MQ",
                    "MR",
                    "MU",
                    "YT",
                    "MX",
                    "FM",
                    "MD",
                    "MC",
                    "MN",
                    "ME",
                    "MS",
                    "MA",
                    "MZ",
                    "MM",
                    "NA",
                    "NR",
                    "NP",
                    "NL",
                    "NC",
                    "NZ",
                    "NI",
                    "NE",
                    "NG",
                    "NU",
                    "NF",
                    "KP",
                    "MK",
                    "MP",
                    "NO",
                    "OM",
                    "PK",
                    "PW",
                    "PS",
                    "PA",
                    "PG",
                    "PY",
                    "PE",
                    "PH",
                    "PN",
                    "PL",
                    "PT",
                    "PR",
                    "QA",
                    "RE",
                    "RO",
                    "RU",
                    "RW",
                    "BL",
                    "SH",
                    "KN",
                    "LC",
                    "MF",
                    "PM",
                    "VC",
                    "WS",
                    "SM",
                    "ST",
                    "SA",
                    "SN",
                    "RS",
                    "SC",
                    "SL",
                    "SG",
                    "SX",
                    "SK",
                    "SI",
                    "SB",
                    "SO",
                    "ZA",
                    "GS",
                    "KR",
                    "SS",
                    "ES",
                    "LK",
                    "SD",
                    "SR",
                    "SJ",
                    "SE",
                    "CH",
                    "SY",
                    "TW",
                    "TJ",
                    "TZ",
                    "TH",
                    "TL",
                    "TG",
                    "TK",
                    "TO",
                    "TT",
                    "TN",
                    "TR",
                    "TM",
                    "TC",
                    "TV",
                    "UG",
                    "UA",
                    "AE",
                    "GB",
                    "UM",
                    "US",
                    "UY",
                    "UZ",
                    "VU",
                    "VE",
                    "VN",
                    "VG",
                    "VI",
                    "WF",
                    "EH",
                    "YE",
                    "ZM",
                    "ZW"
                ],
                "type": "string",
                "description": "* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Türkiye\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe"
            },
            "CourseAccessRoleChoiceEnum": {
                "enum": [
                    "owner",
                    "administrator",
                    "instructor",
                    "manager"
                ],
                "type": "string",
                "description": "* `owner` - owner\n* `administrator` - administrator\n* `instructor` - instructor\n* `manager` - manager"
            },
            "EnrollmentStateEnum": {
                "enum": [
                    "set",
                    "failed"
                ],
                "type": "string",
                "description": "* `set` - Set\n* `failed` - Failed"
            },
            "LanguageEnum": {
                "enum": [
                    "en-us",
                    "fr-fr"
                ],
                "type": "string",
                "description": "* `en-us` - English\n* `fr-fr` - French"
            },
            "LanguagesEnum": {
                "enum": [
                    "af",
                    "ar",
                    "ar-dz",
                    "ast",
                    "az",
                    "bg",
                    "be",
                    "bn",
                    "br",
                    "bs",
                    "ca",
                    "ckb",
                    "cs",
                    "cy",
                    "da",
                    "de",
                    "dsb",
                    "el",
                    "en",
                    "en-au",
                    "en-gb",
                    "eo",
                    "es",
                    "es-ar",
                    "es-co",
                    "es-mx",
                    "es-ni",
                    "es-ve",
                    "et",
                    "eu",
                    "fa",
                    "fi",
                    "fr",
                    "fy",
                    "ga",
                    "gd",
                    "gl",
                    "he",
                    "hi",
                    "hr",
                    "hsb",
                    "hu",
                    "hy",
                    "ia",
                    "id",
                    "ig",
                    "io",
                    "is",
                    "it",
                    "ja",
                    "ka",
                    "kab",
                    "kk",
                    "km",
                    "kn",
                    "ko",
                    "ky",
                    "lb",
                    "lt",
                    "lv",
                    "mk",
                    "ml",
                    "mn",
                    "mr",
                    "ms",
                    "my",
                    "nb",
                    "ne",
                    "nl",
                    "nn",
                    "os",
                    "pa",
                    "pl",
                    "pt",
                    "pt-br",
                    "ro",
                    "ru",
                    "sk",
                    "sl",
                    "sq",
                    "sr",
                    "sr-latn",
                    "sv",
                    "sw",
                    "ta",
                    "te",
                    "tg",
                    "th",
                    "tk",
                    "tr",
                    "tt",
                    "udm",
                    "uk",
                    "ur",
                    "uz",
                    "vi",
                    "zh-hans",
                    "zh-hant"
                ],
                "type": "string",
                "description": "* `af` - Afrikaans\n* `ar` - Arabic\n* `ar-dz` - Algerian Arabic\n* `ast` - Asturian\n* `az` - Azerbaijani\n* `bg` - Bulgarian\n* `be` - Belarusian\n* `bn` - Bengali\n* `br` - Breton\n* `bs` - Bosnian\n* `ca` - Catalan\n* `ckb` - Central Kurdish (Sorani)\n* `cs` - Czech\n* `cy` - Welsh\n* `da` - Danish\n* `de` - German\n* `dsb` - Lower Sorbian\n* `el` - Greek\n* `en` - English\n* `en-au` - Australian English\n* `en-gb` - British English\n* `eo` - Esperanto\n* `es` - Spanish\n* `es-ar` - Argentinian Spanish\n* `es-co` - Colombian Spanish\n* `es-mx` - Mexican Spanish\n* `es-ni` - Nicaraguan Spanish\n* `es-ve` - Venezuelan Spanish\n* `et` - Estonian\n* `eu` - Basque\n* `fa` - Persian\n* `fi` - Finnish\n* `fr` - French\n* `fy` - Frisian\n* `ga` - Irish\n* `gd` - Scottish Gaelic\n* `gl` - Galician\n* `he` - Hebrew\n* `hi` - Hindi\n* `hr` - Croatian\n* `hsb` - Upper Sorbian\n* `hu` - Hungarian\n* `hy` - Armenian\n* `ia` - Interlingua\n* `id` - Indonesian\n* `ig` - Igbo\n* `io` - Ido\n* `is` - Icelandic\n* `it` - Italian\n* `ja` - Japanese\n* `ka` - Georgian\n* `kab` - Kabyle\n* `kk` - Kazakh\n* `km` - Khmer\n* `kn` - Kannada\n* `ko` - Korean\n* `ky` - Kyrgyz\n* `lb` - Luxembourgish\n* `lt` - Lithuanian\n* `lv` - Latvian\n* `mk` - Macedonian\n* `ml` - Malayalam\n* `mn` - Mongolian\n* `mr` - Marathi\n* `ms` - Malay\n* `my` - Burmese\n* `nb` - Norwegian Bokmål\n* `ne` - Nepali\n* `nl` - Dutch\n* `nn` - Norwegian Nynorsk\n* `os` - Ossetic\n* `pa` - Punjabi\n* `pl` - Polish\n* `pt` - Portuguese\n* `pt-br` - Brazilian Portuguese\n* `ro` - Romanian\n* `ru` - Russian\n* `sk` - Slovak\n* `sl` - Slovenian\n* `sq` - Albanian\n* `sr` - Serbian\n* `sr-latn` - Serbian Latin\n* `sv` - Swedish\n* `sw` - Swahili\n* `ta` - Tamil\n* `te` - Telugu\n* `tg` - Tajik\n* `th` - Thai\n* `tk` - Turkmen\n* `tr` - Turkish\n* `tt` - Tatar\n* `udm` - Udmurt\n* `uk` - Ukrainian\n* `ur` - Urdu\n* `uz` - Uzbek\n* `vi` - Vietnamese\n* `zh-hans` - Simplified Chinese\n* `zh-hant` - Traditional Chinese"
            },
            "NameEnum": {
                "enum": [
                    "contract_definition"
                ],
                "type": "string",
                "description": "* `contract_definition` - Contract Definition"
            },
            "NullEnum": {
                "enum": [
                    null
                ]
            },
            "OrderStateEnum": {
                "enum": [
                    "draft",
                    "submitted",
                    "pending",
                    "canceled",
                    "validated"
                ],
                "type": "string",
                "description": "* `draft` - Draft\n* `submitted` - Submitted\n* `pending` - Pending\n* `canceled` - Canceled\n* `validated` - Validated"
            },
            "OrganizationAccessRoleChoiceEnum": {
                "enum": [
                    "owner",
                    "administrator",
                    "member"
                ],
                "type": "string",
                "description": "* `owner` - owner\n* `administrator` - administrator\n* `member` - member"
            },
            "PaginatedAdminCertificateDefinitionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminCertificateDefinition"
                        }
                    }
                }
            },
            "PaginatedAdminContractDefinitionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminContractDefinition"
                        }
                    }
                }
            },
            "PaginatedAdminCourseLightList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminCourseLight"
                        }
                    }
                }
            },
            "PaginatedAdminCourseProductRelationsList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminCourseProductRelations"
                        }
                    }
                }
            },
            "PaginatedAdminCourseRunList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminCourseRun"
                        }
                    }
                }
            },
            "PaginatedAdminOrderGroupList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrderGroup"
                        }
                    }
                }
            },
            "PaginatedAdminOrderLightList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrderLight"
                        }
                    }
                }
            },
            "PaginatedAdminOrganizationLightList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminOrganizationLight"
                        }
                    }
                }
            },
            "PaginatedAdminProductLightList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminProductLight"
                        }
                    }
                }
            },
            "PaginatedAdminUserList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminUser"
                        }
                    }
                }
            },
            "PatchedAdminCertificateDefinitionRequest": {
                "type": "object",
                "description": "Serializer for CertificationDefinition model.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1
                    },
                    "template": {
                        "nullable": true,
                        "title": "Template to generate pdf",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/TemplateEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    }
                }
            },
            "PatchedAdminContractDefinitionRequest": {
                "type": "object",
                "description": "Serializer for ContractDefinition model.",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "description": "Language of the contract definition\n\n* `en-us` - English\n* `fr-fr` - French"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NameEnum"
                            }
                        ],
                        "title": "Template name"
                    }
                }
            },
            "PatchedAdminCourseAccessRequest": {
                "type": "object",
                "description": "Serializer for CourseAccess model.",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/CourseAccessRoleChoiceEnum"
                    }
                }
            },
            "PatchedAdminCourseRequest": {
                "type": "object",
                "description": "Serializer for Course model.",
                "properties": {
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "cover": {
                        "type": "string",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "PatchedAdminCourseRunRequest": {
                "type": "object",
                "description": "Serializer for CourseRun model.",
                "properties": {
                    "resource_link": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "is_gradable": {
                        "type": "boolean"
                    },
                    "is_listed": {
                        "type": "boolean",
                        "description": "If checked the course run will be included in the list of course runs available for enrollment on the related course page."
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LanguagesEnum"
                        }
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course start"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Course end"
                    },
                    "enrollment_start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Enrollment date"
                    },
                    "enrollment_end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "PatchedAdminOrderGroupRequest": {
                "type": "object",
                "description": "Admin Serializer for OrderGroup model",
                "properties": {
                    "nb_seats": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "title": "Number of seats",
                        "description": "The maximum number of orders that can be validated for a given order group"
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedAdminOrganizationAccessRequest": {
                "type": "object",
                "description": "Serializer for OrganizationAccess model.",
                "properties": {
                    "role": {
                        "$ref": "#/components/schemas/OrganizationAccessRoleChoiceEnum"
                    }
                }
            },
            "PatchedAdminOrganizationAddressRequest": {
                "type": "object",
                "description": "Serializer for the Address model for an organization",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "address": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "postcode": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryEnum"
                    },
                    "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "is_main": {
                        "type": "boolean",
                        "title": "Main"
                    },
                    "is_reusable": {
                        "type": "boolean",
                        "title": "Reusable"
                    }
                }
            },
            "PatchedAdminOrganizationRequest": {
                "type": "object",
                "description": "Serializer for Organization model.",
                "properties": {
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "country": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryEnum"
                            }
                        ],
                        "description": "Country field will be deprecated soon in order to be replaced by address relation.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Türkiye\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe"
                    },
                    "logo": {
                        "type": "string",
                        "format": "binary"
                    },
                    "representative": {
                        "type": "string",
                        "description": "representative fullname (to sign certificate for example)",
                        "maxLength": 100
                    },
                    "signature": {
                        "type": "string",
                        "format": "binary"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "enterprise_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 50
                    },
                    "activity_category_code": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "representative_profession": {
                        "type": "string",
                        "nullable": true,
                        "title": "Profession of the organization's representative",
                        "description": "representative profession",
                        "maxLength": 100
                    },
                    "signatory_representative": {
                        "type": "string",
                        "nullable": true,
                        "description": "This field is optional. If it is set, you must set the field'signatory_representative_profession' as well",
                        "maxLength": 100
                    },
                    "signatory_representative_profession": {
                        "type": "string",
                        "nullable": true,
                        "title": "Profession of the signatory representative",
                        "description": "signatory representative profession",
                        "maxLength": 100
                    },
                    "contact_phone": {
                        "type": "string",
                        "title": "Contact phone number",
                        "maxLength": 40
                    },
                    "contact_email": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "dpo_email": {
                        "type": "string",
                        "title": "Data protection officer email",
                        "maxLength": 100
                    }
                }
            },
            "PatchedAdminProductRequest": {
                "type": "object",
                "description": "Serializer for Product model.",
                "properties": {
                    "title": {
                        "type": "string",
                        "minLength": 1
                    },
                    "description": {
                        "type": "string"
                    },
                    "call_to_action": {
                        "type": "string",
                        "minLength": 1
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "maximum": 10000000,
                        "minimum": 0,
                        "exclusiveMaximum": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "instructions": {
                        "type": "string"
                    },
                    "certificate_definition": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "nullable": true
                    },
                    "contract_definition": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID",
                        "nullable": true
                    }
                }
            },
            "PatchedAdminProductTargetCourseRelationRequest": {
                "type": "object",
                "description": "Serializer for ProductTargetCourseRelation model",
                "properties": {
                    "course": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID"
                    },
                    "product": {
                        "type": "string",
                        "format": "uuid",
                        "description": "primary key for the record as UUID"
                    },
                    "is_graded": {
                        "type": "boolean",
                        "title": "Take into account for certification",
                        "description": "Take into account the course grade for certification."
                    },
                    "position": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "title": "Position in product"
                    },
                    "course_runs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "description": "primary key for the record as UUID"
                        }
                    }
                }
            },
            "TemplateEnum": {
                "enum": [
                    "certificate",
                    "degree"
                ],
                "type": "string",
                "description": "* `certificate` - Certificate\n* `degree` - Degree"
            },
            "TypeEnum": {
                "enum": [
                    "credential",
                    "enrollment",
                    "certificate"
                ],
                "type": "string",
                "description": "* `credential` - Credential\n* `enrollment` - Enrollment\n* `certificate` - Certificate"
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    }
}