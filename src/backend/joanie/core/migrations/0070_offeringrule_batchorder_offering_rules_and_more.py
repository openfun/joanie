# Generated by Django 4.2.23 on 2025-07-01 10:09

from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0069_remove_batchorder_offering_rules_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OfferingRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='primary key for the record as UUID', primary_key=True, serialize=False, verbose_name='id')),
                ('created_on', models.DateTimeField(auto_now_add=True, help_text='date and time at which a record was created', verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, help_text='date and time at which a record was last updated', verbose_name='updated on')),
                ('nb_seats', models.PositiveSmallIntegerField(blank=True, default=None, help_text='The maximum number of orders that can be validated for a given offering rule', null=True, verbose_name='Number of seats')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('position', models.PositiveSmallIntegerField(blank=True, default=None, help_text='Priority', null=True, verbose_name='priority')),
                ('start', models.DateTimeField(blank=True, help_text='Date at which the offering rule rule starts', null=True, verbose_name='rule starts at')),
                ('end', models.DateTimeField(blank=True, help_text='Date at which the offering rule rule ends', null=True, verbose_name='rule ends at')),
                ('course_product_relation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offering_rules', to='core.courseproductrelation', verbose_name='course product relation')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offering_rules', to='core.discount', verbose_name='Product price discount')),
            ],
            options={
                'verbose_name': 'Offering rule',
                'verbose_name_plural': 'Offering rules',
                'db_table': 'joanie_offeringrule',
                'ordering': ['course_product_relation', 'position'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='batchorder',
            name='offering_rules',
            field=models.ManyToManyField(blank=True, related_name='batch_orders', to='core.offeringrule', verbose_name='offering rule'),
        ),
        migrations.AddField(
            model_name='order',
            name='offering_rules',
            field=models.ManyToManyField(blank=True, related_name='orders', to='core.offeringrule', verbose_name='offering rule'),
        ),
        migrations.AddField(
            model_name='voucher',
            name='offering_rule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vouchers', to='core.offeringrule', verbose_name='offering rule'),
        ),
        migrations.CreateModel(
            name='OfferingRuleTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('description', models.CharField(blank=True, default=None, help_text='Description of the offering rule', max_length=255, null=True, verbose_name='description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='core.offeringrule')),
            ],
            options={
                'verbose_name': 'Offering rule Translation',
                'db_table': 'joanie_offeringrule_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name='offeringrule',
            constraint=models.CheckConstraint(check=models.Q(('start__lte', models.F('end'))), name='offering_check_start_before_end', violation_error_message='Start date cannot be greater than end date'),
        ),
    ]
