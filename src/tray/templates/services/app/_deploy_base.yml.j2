{%- set dc_name = "joanie-%s" | format(service_variant) -%}

apiVersion: v1
kind: Deployment
metadata:
  labels:
    app: joanie
    service: "{{ service_variant }}"
    version: "{{ joanie_image_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: "{{ dc_name }}-{{ deployment_stamp }}"
  namespace: "{{ namespace_name }}"
spec:
  replicas: {{ joanie_replicas }}
  selector:
    matchLabels:
      app: joanie
      service: "{{ service_variant }}"
      version: "{{ joanie_image_tag }}"
      deployment: "{{ dc_name }}-{{ deployment_stamp }}"
      deployment_stamp: "{{ deployment_stamp }}"
  template:
    metadata:
      labels:
        app: joanie
        service: "{{ service_variant }}"
        version: "{{ joanie_image_tag }}"
        deployment: "{{ dc_name }}-{{ deployment_stamp }}"
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      # Prefer running pods on different nodes for redundancy
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: deployment
                      operator: In
                      values:
                        - "{{ dc_name }}-{{ deployment_stamp }}"
                topologyKey: kubernetes.io/hostname
{% set image_pull_secret_name = joanie_image_pull_secret_name | default(none) or default_image_pull_secret_name %}
{% if image_pull_secret_name is not none %}
      imagePullSecrets:
        - name: "{{ image_pull_secret_name }}"
{% endif %}
      containers:
        - name: joanie
          image: "{{ joanie_image_name }}:{{ joanie_image_tag }}"
          imagePullPolicy: Always
{% if service_variant=="app" %}
          ports:
          - name: django-port
            containerPort: {{ joanie_django_port }}
{% endif %}
          livenessProbe: {{ joanie_livenessprobe }}
          readinessProbe: {{ joanie_readynessprobe }}
          env:
            - name: DB_HOST
              value: "joanie-{{ joanie_database_host }}-{{ deployment_stamp }}"
            - name: DB_NAME
              value: "{{ joanie_database_name }}"
            - name: DB_PORT
              value: "{{ joanie_database_port }}"
            - name: DJANGO_ALLOWED_HOSTS
              value: "{{ joanie_host | blue_green_hosts }},{{ joanie_admin_host | blue_green_hosts }}"
            - name: DJANGO_CSRF_TRUSTED_ORIGINS
              value: "{{ joanie_host | blue_green_hosts | split(',') | map('regex_replace', '^(.*)$', 'https://\\1') | join(',') }},{{ joanie_admin_host | blue_green_hosts | split(',') | map('regex_replace', '^(.*)$', 'https://\\1') | join(',') }}"
            - name: DJANGO_CONFIGURATION
              value: "{{ joanie_django_configuration }}"
            - name: DJANGO_CORS_ALLOWED_ORIGINS
              value: "{{ richie_host | blue_green_hosts | split(',') | map('regex_replace', '^(.*)$', 'https://\\1') | join(',') }},{{ joanie_admin_host | blue_green_hosts | split(',') | map('regex_replace', '^(.*)$', 'https://\\1') | join(',') }}"
            - name: DJANGO_CSRF_COOKIE_DOMAIN
              value: ".{{ joanie_host }}"
            - name: DJANGO_SETTINGS_MODULE
              value: joanie.configs.settings
            - name: JOANIE_BACKOFFICE_BASE_URL
              value: {{joanie_admin_host}}
          envFrom:
            - secretRef:
                name: "{{ joanie_secret_name }}"
            - configMapRef:
                name: "joanie-app-dotenv-{{ deployment_stamp }}"
          resources: {{ joanie_app_resources }}
          volumeMounts:
            - name: joanie-configmap
              mountPath: /app/joanie/configs
{% if service_variant=="celery" %}
          command: {{ joanie_celery_command }}
{% endif %}
      securityContext:
        runAsUser: {{ container_uid }}
        runAsGroup: {{ container_gid }}
      volumes:
        - name: joanie-configmap
          configMap:
            defaultMode: 420
            name: joanie-app-{{ deployment_stamp }}
