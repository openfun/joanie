services:
  postgresql:
    image: postgres:16.4
    env_file:
      - env.d/development/postgresql
    ports:
      - "15432:5432"

  redis:
    image: redis:5
    ports:
      - "6379:6379"

  app-dev:
    build:
      context: .
      target: development
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    image: joanie:development
    environment:
      - PYLINTHOME=/app/.pylint.d
      - DJANGO_CONFIGURATION=Development
    env_file:
      - env.d/development/common
      - env.d/development/localtunnel
      - env.d/development/postgresql
    ports:
      - "8071:8000"
    volumes:
      - ./src/backend:/app
      - ./data/media:/data/media
      - ./data/static:/data/static
      - ./data/contracts:/data/contracts
    depends_on:
      - postgresql
      - mailcatcher
      - redis
    stdin_open: true
    tty: true
    networks:
      default:
      lms_outside:
        aliases:
          - joanie

  celery-dev:
    user: ${DOCKER_USER:-1000}
    image: joanie:development
    command: ["celery", "-A", "joanie.celery_app", "worker", "-l", "DEBUG", "-n", "joanie@%h"]
    environment:
      - DJANGO_CONFIGURATION=Development
    env_file:
      - env.d/development/common
      - env.d/development/postgresql
    ports:
      - "5555:5555"
    volumes:
      - ./src/backend:/app
      - ./data/media:/data/media
      - ./data/static:/data/static
      - ./data/contracts:/data/contracts
    depends_on:
      - app-dev
    networks:
      default:
      lms_outside:
        aliases:
          - joanie

  app:
    build:
      context: .
      target: production
      args:
        DOCKER_USER: ${DOCKER_USER:-1000}
    user: ${DOCKER_USER:-1000}
    image: joanie:production
    environment:
      - DJANGO_CONFIGURATION=ContinuousIntegration
    env_file:
      - env.d/development/common
      - env.d/development/postgresql
    volumes:
      - ./data/media:/data/media
      - ./data/contracts:/data/contracts
    depends_on:
      - postgresql
      - redis
    networks:
      default:
      lms_outside:
        aliases:
          - joanie

  celery:
    user: ${DOCKER_USER:-1000}
    image: joanie:production
    command: ["celery", "-A", "joanie.celery_app", "worker", "-l", "INFO"]
    environment:
      - DJANGO_CONFIGURATION=ContinuousIntegration
    env_file:
      - env.d/development/common
      - env.d/development/postgresql
    volumes:
      - ./data/contracts:/data/contracts
    depends_on:
      - app
    networks:
      default:
      lms_outside:
        aliases:
          - joanie

  nginx:
    image: nginx:1.13
    ports:
      - "8082:8082"
    volumes:
      - ./docker/files/etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./data/media:/data/media:ro
    depends_on:
      - app

  dockerize:
    image: jwilder/dockerize

  crowdin:
    image: crowdin/cli:4.0.0
    volumes:
      - ".:/app"
    env_file:
      - env.d/development/crowdin
    user: "${DOCKER_USER:-1000}"
    working_dir: /app

  mail-generator:
    image: node:20.18
    user: "${DOCKER_USER:-1000}"
    environment:
      HOME: /tmp
    volumes:
      - ".:/app"
    working_dir: /app/src/mail

  admin-dev:
    image: node:20.18
    user: "${DOCKER_USER:-1000}"
    environment:
      HOME: /tmp
    volumes:
      - "./src/frontend/admin:/app"
    working_dir: /app
    ports:
      - "8072:8072"
    command: "yarn dev"
    depends_on:
      - app-dev

  mailcatcher:
    image: sj26/mailcatcher:latest
    ports:
      - "1081:1080"

  terraform-state:
    image: hashicorp/terraform:1.0.7
    environment:
      - TF_WORKSPACE=${PROJECT:-} # avoid env conflict in local state
    user: ${DOCKER_USER:-1000}
    working_dir: /app
    volumes:
      - ./src/terraform/create_state_bucket:/app

  terraform:
    image: hashicorp/terraform:1.0.7
    user: ${DOCKER_USER:-1000}
    working_dir: /app
    volumes:
      - ./src/terraform:/app

networks:
  lms_outside:
    driver: bridge
    name: "${JOANIE_LMS_NETWORK:-edx-lms-outside}"
